// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Service.proto

#include "Service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace eco {
namespace service {
namespace proto {
class GetServiceReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetServiceReq>
      _instance;
} _GetServiceReq_default_instance_;
class ServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service>
      _instance;
} _Service_default_instance_;
class GetServiceAddressReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetServiceAddressReq>
      _instance;
} _GetServiceAddressReq_default_instance_;
class GetServiceAddressRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetServiceAddressRsp>
      _instance;
} _GetServiceAddressRsp_default_instance_;
class SubServiceAddressReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubServiceAddressReq>
      _instance;
} _SubServiceAddressReq_default_instance_;
class SubServiceAddressRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubServiceAddressRsp>
      _instance;
} _SubServiceAddressRsp_default_instance_;
class PubServiceAddressReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PubServiceAddressReq>
      _instance;
} _PubServiceAddressReq_default_instance_;
class PubServiceAddressRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PubServiceAddressRsp>
      _instance;
} _PubServiceAddressRsp_default_instance_;
class OnPubServiceAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnPubServiceAddress>
      _instance;
} _OnPubServiceAddress_default_instance_;
}  // namespace proto
}  // namespace service
}  // namespace eco
namespace protobuf_Service_2eproto {
void InitDefaultsGetServiceReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::eco::service::proto::_GetServiceReq_default_instance_;
    new (ptr) ::eco::service::proto::GetServiceReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eco::service::proto::GetServiceReq::InitAsDefaultInstance();
}

void InitDefaultsGetServiceReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetServiceReqImpl);
}

void InitDefaultsServiceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Error_2eproto::InitDefaultsError();
  {
    void* ptr = &::eco::service::proto::_Service_default_instance_;
    new (ptr) ::eco::service::proto::Service();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eco::service::proto::Service::InitAsDefaultInstance();
}

void InitDefaultsService() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServiceImpl);
}

void InitDefaultsGetServiceAddressReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::eco::service::proto::_GetServiceAddressReq_default_instance_;
    new (ptr) ::eco::service::proto::GetServiceAddressReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eco::service::proto::GetServiceAddressReq::InitAsDefaultInstance();
}

void InitDefaultsGetServiceAddressReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetServiceAddressReqImpl);
}

void InitDefaultsGetServiceAddressRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Error_2eproto::InitDefaultsError();
  {
    void* ptr = &::eco::service::proto::_GetServiceAddressRsp_default_instance_;
    new (ptr) ::eco::service::proto::GetServiceAddressRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eco::service::proto::GetServiceAddressRsp::InitAsDefaultInstance();
}

void InitDefaultsGetServiceAddressRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetServiceAddressRspImpl);
}

void InitDefaultsSubServiceAddressReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::eco::service::proto::_SubServiceAddressReq_default_instance_;
    new (ptr) ::eco::service::proto::SubServiceAddressReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eco::service::proto::SubServiceAddressReq::InitAsDefaultInstance();
}

void InitDefaultsSubServiceAddressReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSubServiceAddressReqImpl);
}

void InitDefaultsSubServiceAddressRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Error_2eproto::InitDefaultsError();
  {
    void* ptr = &::eco::service::proto::_SubServiceAddressRsp_default_instance_;
    new (ptr) ::eco::service::proto::SubServiceAddressRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eco::service::proto::SubServiceAddressRsp::InitAsDefaultInstance();
}

void InitDefaultsSubServiceAddressRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSubServiceAddressRspImpl);
}

void InitDefaultsPubServiceAddressReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::eco::service::proto::_PubServiceAddressReq_default_instance_;
    new (ptr) ::eco::service::proto::PubServiceAddressReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eco::service::proto::PubServiceAddressReq::InitAsDefaultInstance();
}

void InitDefaultsPubServiceAddressReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPubServiceAddressReqImpl);
}

void InitDefaultsPubServiceAddressRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Error_2eproto::InitDefaultsError();
  {
    void* ptr = &::eco::service::proto::_PubServiceAddressRsp_default_instance_;
    new (ptr) ::eco::service::proto::PubServiceAddressRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eco::service::proto::PubServiceAddressRsp::InitAsDefaultInstance();
}

void InitDefaultsPubServiceAddressRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPubServiceAddressRspImpl);
}

void InitDefaultsOnPubServiceAddressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::eco::service::proto::_OnPubServiceAddress_default_instance_;
    new (ptr) ::eco::service::proto::OnPubServiceAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eco::service::proto::OnPubServiceAddress::InitAsDefaultInstance();
}

void InitDefaultsOnPubServiceAddress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOnPubServiceAddressImpl);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::GetServiceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::GetServiceReq, service_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::Service, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::Service, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::Service, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::Service, process_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::Service, did_protocol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::Service, object_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::Service, max_future_object_workload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::Service, max_limited_object_workload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::Service, virtual_service_object_workload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::Service, horizontal_virtual_service_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::GetServiceAddressReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::GetServiceAddressReq, service_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::GetServiceAddressRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::GetServiceAddressRsp, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::GetServiceAddressRsp, service_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::SubServiceAddressReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::SubServiceAddressReq, service_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::SubServiceAddressRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::SubServiceAddressRsp, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::SubServiceAddressRsp, service_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::PubServiceAddressReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::PubServiceAddressReq, service_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::PubServiceAddressRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::PubServiceAddressRsp, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::PubServiceAddressRsp, service_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::OnPubServiceAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eco::service::proto::OnPubServiceAddress, service_name_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::eco::service::proto::GetServiceReq)},
  { 6, -1, sizeof(::eco::service::proto::Service)},
  { 20, -1, sizeof(::eco::service::proto::GetServiceAddressReq)},
  { 26, -1, sizeof(::eco::service::proto::GetServiceAddressRsp)},
  { 33, -1, sizeof(::eco::service::proto::SubServiceAddressReq)},
  { 39, -1, sizeof(::eco::service::proto::SubServiceAddressRsp)},
  { 46, -1, sizeof(::eco::service::proto::PubServiceAddressReq)},
  { 52, -1, sizeof(::eco::service::proto::PubServiceAddressRsp)},
  { 59, -1, sizeof(::eco::service::proto::OnPubServiceAddress)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::eco::service::proto::_GetServiceReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eco::service::proto::_Service_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eco::service::proto::_GetServiceAddressReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eco::service::proto::_GetServiceAddressRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eco::service::proto::_SubServiceAddressReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eco::service::proto::_SubServiceAddressRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eco::service::proto::_PubServiceAddressReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eco::service::proto::_PubServiceAddressRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eco::service::proto::_OnPubServiceAddress_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rService.proto\022\021eco.service.proto\032\013Erro"
      "r.proto\"%\n\rGetServiceReq\022\024\n\014service_name"
      "\030\n \001(\t\"\246\002\n\007Service\022\'\n\005error\030\002 \001(\0132\030.eco."
      "service.proto.Error\022\024\n\014service_name\030\n \001("
      "\t\022\024\n\014process_name\030\013 \001(\t\022\024\n\014did_protocol\030"
      "\014 \001(\t\022\023\n\013object_name\030\r \001(\t\022\"\n\032max_future"
      "_object_workload\030\016 \001(\003\022#\n\033max_limited_ob"
      "ject_workload\030\017 \001(\003\022\'\n\037virtual_service_o"
      "bject_workload\030\020 \001(\005\022)\n!horizontal_virtu"
      "al_service_number\030\021 \001(\005\",\n\024GetServiceAdd"
      "ressReq\022\024\n\014service_name\030\n \001(\t\"U\n\024GetServ"
      "iceAddressRsp\022\'\n\005error\030\002 \001(\0132\030.eco.servi"
      "ce.proto.Error\022\024\n\014service_name\030\n \001(\t\",\n\024"
      "SubServiceAddressReq\022\024\n\014service_name\030\n \001"
      "(\t\"U\n\024SubServiceAddressRsp\022\'\n\005error\030\002 \001("
      "\0132\030.eco.service.proto.Error\022\024\n\014service_n"
      "ame\030\n \001(\t\",\n\024PubServiceAddressReq\022\024\n\014ser"
      "vice_name\030\n \001(\t\"U\n\024PubServiceAddressRsp\022"
      "\'\n\005error\030\002 \001(\0132\030.eco.service.proto.Error"
      "\022\024\n\014service_name\030\n \001(\t\"+\n\023OnPubServiceAd"
      "dress\022\024\n\014service_name\030\n \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 835);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Service.proto", &protobuf_RegisterTypes);
  ::protobuf_Error_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Service_2eproto
namespace eco {
namespace service {
namespace proto {

// ===================================================================

void GetServiceReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServiceReq::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServiceReq::GetServiceReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Service_2eproto::InitDefaultsGetServiceReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eco.service.proto.GetServiceReq)
}
GetServiceReq::GetServiceReq(const GetServiceReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  // @@protoc_insertion_point(copy_constructor:eco.service.proto.GetServiceReq)
}

void GetServiceReq::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetServiceReq::~GetServiceReq() {
  // @@protoc_insertion_point(destructor:eco.service.proto.GetServiceReq)
  SharedDtor();
}

void GetServiceReq::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetServiceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetServiceReq::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetServiceReq& GetServiceReq::default_instance() {
  ::protobuf_Service_2eproto::InitDefaultsGetServiceReq();
  return *internal_default_instance();
}

GetServiceReq* GetServiceReq::New(::google::protobuf::Arena* arena) const {
  GetServiceReq* n = new GetServiceReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetServiceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:eco.service.proto.GetServiceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetServiceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eco.service.proto.GetServiceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.service.proto.GetServiceReq.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eco.service.proto.GetServiceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eco.service.proto.GetServiceReq)
  return false;
#undef DO_
}

void GetServiceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eco.service.proto.GetServiceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.GetServiceReq.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->service_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eco.service.proto.GetServiceReq)
}

::google::protobuf::uint8* GetServiceReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eco.service.proto.GetServiceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.GetServiceReq.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->service_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eco.service.proto.GetServiceReq)
  return target;
}

size_t GetServiceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eco.service.proto.GetServiceReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 10;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetServiceReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eco.service.proto.GetServiceReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServiceReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eco.service.proto.GetServiceReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eco.service.proto.GetServiceReq)
    MergeFrom(*source);
  }
}

void GetServiceReq::MergeFrom(const GetServiceReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eco.service.proto.GetServiceReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
}

void GetServiceReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eco.service.proto.GetServiceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceReq::CopyFrom(const GetServiceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eco.service.proto.GetServiceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceReq::IsInitialized() const {
  return true;
}

void GetServiceReq::Swap(GetServiceReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServiceReq::InternalSwap(GetServiceReq* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetServiceReq::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Service::InitAsDefaultInstance() {
  ::eco::service::proto::_Service_default_instance_._instance.get_mutable()->error_ = const_cast< ::eco::service::proto::Error*>(
      ::eco::service::proto::Error::internal_default_instance());
}
void Service::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Service::kErrorFieldNumber;
const int Service::kServiceNameFieldNumber;
const int Service::kProcessNameFieldNumber;
const int Service::kDidProtocolFieldNumber;
const int Service::kObjectNameFieldNumber;
const int Service::kMaxFutureObjectWorkloadFieldNumber;
const int Service::kMaxLimitedObjectWorkloadFieldNumber;
const int Service::kVirtualServiceObjectWorkloadFieldNumber;
const int Service::kHorizontalVirtualServiceNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Service::Service()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Service_2eproto::InitDefaultsService();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eco.service.proto.Service)
}
Service::Service(const Service& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  process_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.process_name().size() > 0) {
    process_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.process_name_);
  }
  did_protocol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.did_protocol().size() > 0) {
    did_protocol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_protocol_);
  }
  object_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_name().size() > 0) {
    object_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_name_);
  }
  if (from.has_error()) {
    error_ = new ::eco::service::proto::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  ::memcpy(&max_future_object_workload_, &from.max_future_object_workload_,
    static_cast<size_t>(reinterpret_cast<char*>(&horizontal_virtual_service_number_) -
    reinterpret_cast<char*>(&max_future_object_workload_)) + sizeof(horizontal_virtual_service_number_));
  // @@protoc_insertion_point(copy_constructor:eco.service.proto.Service)
}

void Service::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  process_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_protocol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&horizontal_virtual_service_number_) -
      reinterpret_cast<char*>(&error_)) + sizeof(horizontal_virtual_service_number_));
  _cached_size_ = 0;
}

Service::~Service() {
  // @@protoc_insertion_point(destructor:eco.service.proto.Service)
  SharedDtor();
}

void Service::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  process_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_protocol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void Service::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Service::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Service& Service::default_instance() {
  ::protobuf_Service_2eproto::InitDefaultsService();
  return *internal_default_instance();
}

Service* Service::New(::google::protobuf::Arena* arena) const {
  Service* n = new Service;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Service::Clear() {
// @@protoc_insertion_point(message_clear_start:eco.service.proto.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  process_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_protocol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  ::memset(&max_future_object_workload_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&horizontal_virtual_service_number_) -
      reinterpret_cast<char*>(&max_future_object_workload_)) + sizeof(horizontal_virtual_service_number_));
  _internal_metadata_.Clear();
}

bool Service::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eco.service.proto.Service)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eco.service.proto.Error error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.service.proto.Service.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string process_name = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_process_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->process_name().data(), static_cast<int>(this->process_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.service.proto.Service.process_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string did_protocol = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did_protocol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->did_protocol().data(), static_cast<int>(this->did_protocol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.service.proto.Service.did_protocol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string object_name = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_name().data(), static_cast<int>(this->object_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.service.proto.Service.object_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 max_future_object_workload = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_future_object_workload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 max_limited_object_workload = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_limited_object_workload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 virtual_service_object_workload = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &virtual_service_object_workload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 horizontal_virtual_service_number = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &horizontal_virtual_service_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eco.service.proto.Service)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eco.service.proto.Service)
  return false;
#undef DO_
}

void Service::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eco.service.proto.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eco.service.proto.Error error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.Service.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->service_name(), output);
  }

  // string process_name = 11;
  if (this->process_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->process_name().data(), static_cast<int>(this->process_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.Service.process_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->process_name(), output);
  }

  // string did_protocol = 12;
  if (this->did_protocol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did_protocol().data(), static_cast<int>(this->did_protocol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.Service.did_protocol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->did_protocol(), output);
  }

  // string object_name = 13;
  if (this->object_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_name().data(), static_cast<int>(this->object_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.Service.object_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->object_name(), output);
  }

  // int64 max_future_object_workload = 14;
  if (this->max_future_object_workload() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->max_future_object_workload(), output);
  }

  // int64 max_limited_object_workload = 15;
  if (this->max_limited_object_workload() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->max_limited_object_workload(), output);
  }

  // int32 virtual_service_object_workload = 16;
  if (this->virtual_service_object_workload() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->virtual_service_object_workload(), output);
  }

  // int32 horizontal_virtual_service_number = 17;
  if (this->horizontal_virtual_service_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->horizontal_virtual_service_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eco.service.proto.Service)
}

::google::protobuf::uint8* Service::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eco.service.proto.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eco.service.proto.Error error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->error_, deterministic, target);
  }

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.Service.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->service_name(), target);
  }

  // string process_name = 11;
  if (this->process_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->process_name().data(), static_cast<int>(this->process_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.Service.process_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->process_name(), target);
  }

  // string did_protocol = 12;
  if (this->did_protocol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did_protocol().data(), static_cast<int>(this->did_protocol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.Service.did_protocol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->did_protocol(), target);
  }

  // string object_name = 13;
  if (this->object_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_name().data(), static_cast<int>(this->object_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.Service.object_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->object_name(), target);
  }

  // int64 max_future_object_workload = 14;
  if (this->max_future_object_workload() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->max_future_object_workload(), target);
  }

  // int64 max_limited_object_workload = 15;
  if (this->max_limited_object_workload() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->max_limited_object_workload(), target);
  }

  // int32 virtual_service_object_workload = 16;
  if (this->virtual_service_object_workload() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->virtual_service_object_workload(), target);
  }

  // int32 horizontal_virtual_service_number = 17;
  if (this->horizontal_virtual_service_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->horizontal_virtual_service_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eco.service.proto.Service)
  return target;
}

size_t Service::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eco.service.proto.Service)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 10;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string process_name = 11;
  if (this->process_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->process_name());
  }

  // string did_protocol = 12;
  if (this->did_protocol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->did_protocol());
  }

  // string object_name = 13;
  if (this->object_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_name());
  }

  // .eco.service.proto.Error error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  // int64 max_future_object_workload = 14;
  if (this->max_future_object_workload() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_future_object_workload());
  }

  // int64 max_limited_object_workload = 15;
  if (this->max_limited_object_workload() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_limited_object_workload());
  }

  // int32 virtual_service_object_workload = 16;
  if (this->virtual_service_object_workload() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->virtual_service_object_workload());
  }

  // int32 horizontal_virtual_service_number = 17;
  if (this->horizontal_virtual_service_number() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->horizontal_virtual_service_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Service::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eco.service.proto.Service)
  GOOGLE_DCHECK_NE(&from, this);
  const Service* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Service>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eco.service.proto.Service)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eco.service.proto.Service)
    MergeFrom(*source);
  }
}

void Service::MergeFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eco.service.proto.Service)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.process_name().size() > 0) {

    process_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.process_name_);
  }
  if (from.did_protocol().size() > 0) {

    did_protocol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_protocol_);
  }
  if (from.object_name().size() > 0) {

    object_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_name_);
  }
  if (from.has_error()) {
    mutable_error()->::eco::service::proto::Error::MergeFrom(from.error());
  }
  if (from.max_future_object_workload() != 0) {
    set_max_future_object_workload(from.max_future_object_workload());
  }
  if (from.max_limited_object_workload() != 0) {
    set_max_limited_object_workload(from.max_limited_object_workload());
  }
  if (from.virtual_service_object_workload() != 0) {
    set_virtual_service_object_workload(from.virtual_service_object_workload());
  }
  if (from.horizontal_virtual_service_number() != 0) {
    set_horizontal_virtual_service_number(from.horizontal_virtual_service_number());
  }
}

void Service::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eco.service.proto.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Service::CopyFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eco.service.proto.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service::IsInitialized() const {
  return true;
}

void Service::Swap(Service* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Service::InternalSwap(Service* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  process_name_.Swap(&other->process_name_);
  did_protocol_.Swap(&other->did_protocol_);
  object_name_.Swap(&other->object_name_);
  swap(error_, other->error_);
  swap(max_future_object_workload_, other->max_future_object_workload_);
  swap(max_limited_object_workload_, other->max_limited_object_workload_);
  swap(virtual_service_object_workload_, other->virtual_service_object_workload_);
  swap(horizontal_virtual_service_number_, other->horizontal_virtual_service_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Service::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetServiceAddressReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServiceAddressReq::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServiceAddressReq::GetServiceAddressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Service_2eproto::InitDefaultsGetServiceAddressReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eco.service.proto.GetServiceAddressReq)
}
GetServiceAddressReq::GetServiceAddressReq(const GetServiceAddressReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  // @@protoc_insertion_point(copy_constructor:eco.service.proto.GetServiceAddressReq)
}

void GetServiceAddressReq::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetServiceAddressReq::~GetServiceAddressReq() {
  // @@protoc_insertion_point(destructor:eco.service.proto.GetServiceAddressReq)
  SharedDtor();
}

void GetServiceAddressReq::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetServiceAddressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetServiceAddressReq::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetServiceAddressReq& GetServiceAddressReq::default_instance() {
  ::protobuf_Service_2eproto::InitDefaultsGetServiceAddressReq();
  return *internal_default_instance();
}

GetServiceAddressReq* GetServiceAddressReq::New(::google::protobuf::Arena* arena) const {
  GetServiceAddressReq* n = new GetServiceAddressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetServiceAddressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:eco.service.proto.GetServiceAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetServiceAddressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eco.service.proto.GetServiceAddressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.service.proto.GetServiceAddressReq.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eco.service.proto.GetServiceAddressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eco.service.proto.GetServiceAddressReq)
  return false;
#undef DO_
}

void GetServiceAddressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eco.service.proto.GetServiceAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.GetServiceAddressReq.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->service_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eco.service.proto.GetServiceAddressReq)
}

::google::protobuf::uint8* GetServiceAddressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eco.service.proto.GetServiceAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.GetServiceAddressReq.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->service_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eco.service.proto.GetServiceAddressReq)
  return target;
}

size_t GetServiceAddressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eco.service.proto.GetServiceAddressReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 10;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetServiceAddressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eco.service.proto.GetServiceAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceAddressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServiceAddressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eco.service.proto.GetServiceAddressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eco.service.proto.GetServiceAddressReq)
    MergeFrom(*source);
  }
}

void GetServiceAddressReq::MergeFrom(const GetServiceAddressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eco.service.proto.GetServiceAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
}

void GetServiceAddressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eco.service.proto.GetServiceAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceAddressReq::CopyFrom(const GetServiceAddressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eco.service.proto.GetServiceAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceAddressReq::IsInitialized() const {
  return true;
}

void GetServiceAddressReq::Swap(GetServiceAddressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServiceAddressReq::InternalSwap(GetServiceAddressReq* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetServiceAddressReq::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetServiceAddressRsp::InitAsDefaultInstance() {
  ::eco::service::proto::_GetServiceAddressRsp_default_instance_._instance.get_mutable()->error_ = const_cast< ::eco::service::proto::Error*>(
      ::eco::service::proto::Error::internal_default_instance());
}
void GetServiceAddressRsp::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServiceAddressRsp::kErrorFieldNumber;
const int GetServiceAddressRsp::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServiceAddressRsp::GetServiceAddressRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Service_2eproto::InitDefaultsGetServiceAddressRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eco.service.proto.GetServiceAddressRsp)
}
GetServiceAddressRsp::GetServiceAddressRsp(const GetServiceAddressRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_error()) {
    error_ = new ::eco::service::proto::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:eco.service.proto.GetServiceAddressRsp)
}

void GetServiceAddressRsp::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
  _cached_size_ = 0;
}

GetServiceAddressRsp::~GetServiceAddressRsp() {
  // @@protoc_insertion_point(destructor:eco.service.proto.GetServiceAddressRsp)
  SharedDtor();
}

void GetServiceAddressRsp::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void GetServiceAddressRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetServiceAddressRsp::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetServiceAddressRsp& GetServiceAddressRsp::default_instance() {
  ::protobuf_Service_2eproto::InitDefaultsGetServiceAddressRsp();
  return *internal_default_instance();
}

GetServiceAddressRsp* GetServiceAddressRsp::New(::google::protobuf::Arena* arena) const {
  GetServiceAddressRsp* n = new GetServiceAddressRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetServiceAddressRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:eco.service.proto.GetServiceAddressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool GetServiceAddressRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eco.service.proto.GetServiceAddressRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eco.service.proto.Error error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.service.proto.GetServiceAddressRsp.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eco.service.proto.GetServiceAddressRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eco.service.proto.GetServiceAddressRsp)
  return false;
#undef DO_
}

void GetServiceAddressRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eco.service.proto.GetServiceAddressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eco.service.proto.Error error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.GetServiceAddressRsp.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->service_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eco.service.proto.GetServiceAddressRsp)
}

::google::protobuf::uint8* GetServiceAddressRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eco.service.proto.GetServiceAddressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eco.service.proto.Error error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->error_, deterministic, target);
  }

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.GetServiceAddressRsp.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->service_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eco.service.proto.GetServiceAddressRsp)
  return target;
}

size_t GetServiceAddressRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eco.service.proto.GetServiceAddressRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 10;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // .eco.service.proto.Error error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetServiceAddressRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eco.service.proto.GetServiceAddressRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceAddressRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServiceAddressRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eco.service.proto.GetServiceAddressRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eco.service.proto.GetServiceAddressRsp)
    MergeFrom(*source);
  }
}

void GetServiceAddressRsp::MergeFrom(const GetServiceAddressRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eco.service.proto.GetServiceAddressRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_error()) {
    mutable_error()->::eco::service::proto::Error::MergeFrom(from.error());
  }
}

void GetServiceAddressRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eco.service.proto.GetServiceAddressRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceAddressRsp::CopyFrom(const GetServiceAddressRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eco.service.proto.GetServiceAddressRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceAddressRsp::IsInitialized() const {
  return true;
}

void GetServiceAddressRsp::Swap(GetServiceAddressRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServiceAddressRsp::InternalSwap(GetServiceAddressRsp* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetServiceAddressRsp::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubServiceAddressReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubServiceAddressReq::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubServiceAddressReq::SubServiceAddressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Service_2eproto::InitDefaultsSubServiceAddressReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eco.service.proto.SubServiceAddressReq)
}
SubServiceAddressReq::SubServiceAddressReq(const SubServiceAddressReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  // @@protoc_insertion_point(copy_constructor:eco.service.proto.SubServiceAddressReq)
}

void SubServiceAddressReq::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SubServiceAddressReq::~SubServiceAddressReq() {
  // @@protoc_insertion_point(destructor:eco.service.proto.SubServiceAddressReq)
  SharedDtor();
}

void SubServiceAddressReq::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubServiceAddressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubServiceAddressReq::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubServiceAddressReq& SubServiceAddressReq::default_instance() {
  ::protobuf_Service_2eproto::InitDefaultsSubServiceAddressReq();
  return *internal_default_instance();
}

SubServiceAddressReq* SubServiceAddressReq::New(::google::protobuf::Arena* arena) const {
  SubServiceAddressReq* n = new SubServiceAddressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubServiceAddressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:eco.service.proto.SubServiceAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SubServiceAddressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eco.service.proto.SubServiceAddressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.service.proto.SubServiceAddressReq.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eco.service.proto.SubServiceAddressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eco.service.proto.SubServiceAddressReq)
  return false;
#undef DO_
}

void SubServiceAddressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eco.service.proto.SubServiceAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.SubServiceAddressReq.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->service_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eco.service.proto.SubServiceAddressReq)
}

::google::protobuf::uint8* SubServiceAddressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eco.service.proto.SubServiceAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.SubServiceAddressReq.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->service_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eco.service.proto.SubServiceAddressReq)
  return target;
}

size_t SubServiceAddressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eco.service.proto.SubServiceAddressReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 10;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubServiceAddressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eco.service.proto.SubServiceAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SubServiceAddressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubServiceAddressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eco.service.proto.SubServiceAddressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eco.service.proto.SubServiceAddressReq)
    MergeFrom(*source);
  }
}

void SubServiceAddressReq::MergeFrom(const SubServiceAddressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eco.service.proto.SubServiceAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
}

void SubServiceAddressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eco.service.proto.SubServiceAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubServiceAddressReq::CopyFrom(const SubServiceAddressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eco.service.proto.SubServiceAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubServiceAddressReq::IsInitialized() const {
  return true;
}

void SubServiceAddressReq::Swap(SubServiceAddressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubServiceAddressReq::InternalSwap(SubServiceAddressReq* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubServiceAddressReq::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubServiceAddressRsp::InitAsDefaultInstance() {
  ::eco::service::proto::_SubServiceAddressRsp_default_instance_._instance.get_mutable()->error_ = const_cast< ::eco::service::proto::Error*>(
      ::eco::service::proto::Error::internal_default_instance());
}
void SubServiceAddressRsp::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubServiceAddressRsp::kErrorFieldNumber;
const int SubServiceAddressRsp::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubServiceAddressRsp::SubServiceAddressRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Service_2eproto::InitDefaultsSubServiceAddressRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eco.service.proto.SubServiceAddressRsp)
}
SubServiceAddressRsp::SubServiceAddressRsp(const SubServiceAddressRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_error()) {
    error_ = new ::eco::service::proto::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:eco.service.proto.SubServiceAddressRsp)
}

void SubServiceAddressRsp::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
  _cached_size_ = 0;
}

SubServiceAddressRsp::~SubServiceAddressRsp() {
  // @@protoc_insertion_point(destructor:eco.service.proto.SubServiceAddressRsp)
  SharedDtor();
}

void SubServiceAddressRsp::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void SubServiceAddressRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubServiceAddressRsp::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubServiceAddressRsp& SubServiceAddressRsp::default_instance() {
  ::protobuf_Service_2eproto::InitDefaultsSubServiceAddressRsp();
  return *internal_default_instance();
}

SubServiceAddressRsp* SubServiceAddressRsp::New(::google::protobuf::Arena* arena) const {
  SubServiceAddressRsp* n = new SubServiceAddressRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubServiceAddressRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:eco.service.proto.SubServiceAddressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool SubServiceAddressRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eco.service.proto.SubServiceAddressRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eco.service.proto.Error error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.service.proto.SubServiceAddressRsp.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eco.service.proto.SubServiceAddressRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eco.service.proto.SubServiceAddressRsp)
  return false;
#undef DO_
}

void SubServiceAddressRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eco.service.proto.SubServiceAddressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eco.service.proto.Error error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.SubServiceAddressRsp.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->service_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eco.service.proto.SubServiceAddressRsp)
}

::google::protobuf::uint8* SubServiceAddressRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eco.service.proto.SubServiceAddressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eco.service.proto.Error error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->error_, deterministic, target);
  }

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.SubServiceAddressRsp.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->service_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eco.service.proto.SubServiceAddressRsp)
  return target;
}

size_t SubServiceAddressRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eco.service.proto.SubServiceAddressRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 10;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // .eco.service.proto.Error error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubServiceAddressRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eco.service.proto.SubServiceAddressRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SubServiceAddressRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubServiceAddressRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eco.service.proto.SubServiceAddressRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eco.service.proto.SubServiceAddressRsp)
    MergeFrom(*source);
  }
}

void SubServiceAddressRsp::MergeFrom(const SubServiceAddressRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eco.service.proto.SubServiceAddressRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_error()) {
    mutable_error()->::eco::service::proto::Error::MergeFrom(from.error());
  }
}

void SubServiceAddressRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eco.service.proto.SubServiceAddressRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubServiceAddressRsp::CopyFrom(const SubServiceAddressRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eco.service.proto.SubServiceAddressRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubServiceAddressRsp::IsInitialized() const {
  return true;
}

void SubServiceAddressRsp::Swap(SubServiceAddressRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubServiceAddressRsp::InternalSwap(SubServiceAddressRsp* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubServiceAddressRsp::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PubServiceAddressReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PubServiceAddressReq::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PubServiceAddressReq::PubServiceAddressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Service_2eproto::InitDefaultsPubServiceAddressReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eco.service.proto.PubServiceAddressReq)
}
PubServiceAddressReq::PubServiceAddressReq(const PubServiceAddressReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  // @@protoc_insertion_point(copy_constructor:eco.service.proto.PubServiceAddressReq)
}

void PubServiceAddressReq::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PubServiceAddressReq::~PubServiceAddressReq() {
  // @@protoc_insertion_point(destructor:eco.service.proto.PubServiceAddressReq)
  SharedDtor();
}

void PubServiceAddressReq::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PubServiceAddressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PubServiceAddressReq::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PubServiceAddressReq& PubServiceAddressReq::default_instance() {
  ::protobuf_Service_2eproto::InitDefaultsPubServiceAddressReq();
  return *internal_default_instance();
}

PubServiceAddressReq* PubServiceAddressReq::New(::google::protobuf::Arena* arena) const {
  PubServiceAddressReq* n = new PubServiceAddressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PubServiceAddressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:eco.service.proto.PubServiceAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PubServiceAddressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eco.service.proto.PubServiceAddressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.service.proto.PubServiceAddressReq.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eco.service.proto.PubServiceAddressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eco.service.proto.PubServiceAddressReq)
  return false;
#undef DO_
}

void PubServiceAddressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eco.service.proto.PubServiceAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.PubServiceAddressReq.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->service_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eco.service.proto.PubServiceAddressReq)
}

::google::protobuf::uint8* PubServiceAddressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eco.service.proto.PubServiceAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.PubServiceAddressReq.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->service_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eco.service.proto.PubServiceAddressReq)
  return target;
}

size_t PubServiceAddressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eco.service.proto.PubServiceAddressReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 10;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PubServiceAddressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eco.service.proto.PubServiceAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PubServiceAddressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PubServiceAddressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eco.service.proto.PubServiceAddressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eco.service.proto.PubServiceAddressReq)
    MergeFrom(*source);
  }
}

void PubServiceAddressReq::MergeFrom(const PubServiceAddressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eco.service.proto.PubServiceAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
}

void PubServiceAddressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eco.service.proto.PubServiceAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PubServiceAddressReq::CopyFrom(const PubServiceAddressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eco.service.proto.PubServiceAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PubServiceAddressReq::IsInitialized() const {
  return true;
}

void PubServiceAddressReq::Swap(PubServiceAddressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PubServiceAddressReq::InternalSwap(PubServiceAddressReq* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PubServiceAddressReq::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PubServiceAddressRsp::InitAsDefaultInstance() {
  ::eco::service::proto::_PubServiceAddressRsp_default_instance_._instance.get_mutable()->error_ = const_cast< ::eco::service::proto::Error*>(
      ::eco::service::proto::Error::internal_default_instance());
}
void PubServiceAddressRsp::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PubServiceAddressRsp::kErrorFieldNumber;
const int PubServiceAddressRsp::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PubServiceAddressRsp::PubServiceAddressRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Service_2eproto::InitDefaultsPubServiceAddressRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eco.service.proto.PubServiceAddressRsp)
}
PubServiceAddressRsp::PubServiceAddressRsp(const PubServiceAddressRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_error()) {
    error_ = new ::eco::service::proto::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:eco.service.proto.PubServiceAddressRsp)
}

void PubServiceAddressRsp::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
  _cached_size_ = 0;
}

PubServiceAddressRsp::~PubServiceAddressRsp() {
  // @@protoc_insertion_point(destructor:eco.service.proto.PubServiceAddressRsp)
  SharedDtor();
}

void PubServiceAddressRsp::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void PubServiceAddressRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PubServiceAddressRsp::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PubServiceAddressRsp& PubServiceAddressRsp::default_instance() {
  ::protobuf_Service_2eproto::InitDefaultsPubServiceAddressRsp();
  return *internal_default_instance();
}

PubServiceAddressRsp* PubServiceAddressRsp::New(::google::protobuf::Arena* arena) const {
  PubServiceAddressRsp* n = new PubServiceAddressRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PubServiceAddressRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:eco.service.proto.PubServiceAddressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool PubServiceAddressRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eco.service.proto.PubServiceAddressRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eco.service.proto.Error error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.service.proto.PubServiceAddressRsp.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eco.service.proto.PubServiceAddressRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eco.service.proto.PubServiceAddressRsp)
  return false;
#undef DO_
}

void PubServiceAddressRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eco.service.proto.PubServiceAddressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eco.service.proto.Error error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.PubServiceAddressRsp.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->service_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eco.service.proto.PubServiceAddressRsp)
}

::google::protobuf::uint8* PubServiceAddressRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eco.service.proto.PubServiceAddressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eco.service.proto.Error error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->error_, deterministic, target);
  }

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.PubServiceAddressRsp.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->service_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eco.service.proto.PubServiceAddressRsp)
  return target;
}

size_t PubServiceAddressRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eco.service.proto.PubServiceAddressRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 10;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // .eco.service.proto.Error error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PubServiceAddressRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eco.service.proto.PubServiceAddressRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PubServiceAddressRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PubServiceAddressRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eco.service.proto.PubServiceAddressRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eco.service.proto.PubServiceAddressRsp)
    MergeFrom(*source);
  }
}

void PubServiceAddressRsp::MergeFrom(const PubServiceAddressRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eco.service.proto.PubServiceAddressRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_error()) {
    mutable_error()->::eco::service::proto::Error::MergeFrom(from.error());
  }
}

void PubServiceAddressRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eco.service.proto.PubServiceAddressRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PubServiceAddressRsp::CopyFrom(const PubServiceAddressRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eco.service.proto.PubServiceAddressRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PubServiceAddressRsp::IsInitialized() const {
  return true;
}

void PubServiceAddressRsp::Swap(PubServiceAddressRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PubServiceAddressRsp::InternalSwap(PubServiceAddressRsp* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PubServiceAddressRsp::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OnPubServiceAddress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnPubServiceAddress::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnPubServiceAddress::OnPubServiceAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Service_2eproto::InitDefaultsOnPubServiceAddress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eco.service.proto.OnPubServiceAddress)
}
OnPubServiceAddress::OnPubServiceAddress(const OnPubServiceAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  // @@protoc_insertion_point(copy_constructor:eco.service.proto.OnPubServiceAddress)
}

void OnPubServiceAddress::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OnPubServiceAddress::~OnPubServiceAddress() {
  // @@protoc_insertion_point(destructor:eco.service.proto.OnPubServiceAddress)
  SharedDtor();
}

void OnPubServiceAddress::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OnPubServiceAddress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnPubServiceAddress::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnPubServiceAddress& OnPubServiceAddress::default_instance() {
  ::protobuf_Service_2eproto::InitDefaultsOnPubServiceAddress();
  return *internal_default_instance();
}

OnPubServiceAddress* OnPubServiceAddress::New(::google::protobuf::Arena* arena) const {
  OnPubServiceAddress* n = new OnPubServiceAddress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnPubServiceAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:eco.service.proto.OnPubServiceAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool OnPubServiceAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eco.service.proto.OnPubServiceAddress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eco.service.proto.OnPubServiceAddress.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eco.service.proto.OnPubServiceAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eco.service.proto.OnPubServiceAddress)
  return false;
#undef DO_
}

void OnPubServiceAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eco.service.proto.OnPubServiceAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.OnPubServiceAddress.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->service_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eco.service.proto.OnPubServiceAddress)
}

::google::protobuf::uint8* OnPubServiceAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eco.service.proto.OnPubServiceAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 10;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eco.service.proto.OnPubServiceAddress.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->service_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eco.service.proto.OnPubServiceAddress)
  return target;
}

size_t OnPubServiceAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eco.service.proto.OnPubServiceAddress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 10;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnPubServiceAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eco.service.proto.OnPubServiceAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const OnPubServiceAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnPubServiceAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eco.service.proto.OnPubServiceAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eco.service.proto.OnPubServiceAddress)
    MergeFrom(*source);
  }
}

void OnPubServiceAddress::MergeFrom(const OnPubServiceAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eco.service.proto.OnPubServiceAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
}

void OnPubServiceAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eco.service.proto.OnPubServiceAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnPubServiceAddress::CopyFrom(const OnPubServiceAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eco.service.proto.OnPubServiceAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnPubServiceAddress::IsInitialized() const {
  return true;
}

void OnPubServiceAddress::Swap(OnPubServiceAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnPubServiceAddress::InternalSwap(OnPubServiceAddress* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnPubServiceAddress::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace service
}  // namespace eco

// @@protoc_insertion_point(global_scope)
